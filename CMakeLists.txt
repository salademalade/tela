CMAKE_MINIMUM_REQUIRED(VERSION 3.13)

PROJECT(tela)

FIND_PACKAGE(LLVM REQUIRED CONFIG)

MESSAGE(STATUS "Found LLVM ${LLVM_PACKAGE_VERSION}")
MESSAGE(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

LIST(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
INCLUDE(HandleLLVMOptions)
ADD_DEFINITIONS(${LLVM_DEFINITIONS})

ADD_EXECUTABLE(tela "")

TARGET_INCLUDE_DIRECTORIES(tela PRIVATE src)
ADD_SUBDIRECTORY(src)

TARGET_INCLUDE_DIRECTORIES(tela PRIVATE ${LLVM_INCLUDE_DIRS})
IF(WIN32)
  LLVM_MAP_COMPONENTS_TO_LIBNAMES(llvm_libs Support Core IRReader X86CodeGen X86AsmParser)
  target_link_libraries(tela PRIVATE ${llvm_libs})
ELSE()
  TARGET_LINK_LIBRARIES(tela PRIVATE LLVM)
ENDIF()

FIND_PACKAGE(CLI11 CONFIG REQUIRED)
TARGET_LINK_LIBRARIES(tela PRIVATE CLI11::CLI11)

ADD_LIBRARY(telastl "")
ADD_SUBDIRECTORY(std)

TARGET_COMPILE_DEFINITIONS(tela PRIVATE LIB_PREFIX="${CMAKE_INSTALL_PREFIX}")

IF(${LLVM_PACKAGE_VERSION} VERSION_LESS "17.0.1")
  TARGET_COMPILE_DEFINITIONS(tela PRIVATE LLVM_VERSION_17=0)
ELSE()
  TARGET_COMPILE_DEFINITIONS(tela PRIVATE LLVM_VERSION_17=1)
ENDIF()

INCLUDE(CTest)

IF(BUILD_TESTING)

  FIND_PACKAGE(Catch2 REQUIRED)
  ADD_EXECUTABLE(tltests "")
  TARGET_LINK_LIBRARIES(tltests PRIVATE Catch2::Catch2WithMain)

  INCLUDE(Catch)
  CATCH_DISCOVER_TESTS(tltests)

  TARGET_INCLUDE_DIRECTORIES(tltests PRIVATE src)

  ADD_SUBDIRECTORY(tests)

ENDIF()

INSTALL(TARGETS tela DESTINATION bin)
INSTALL(TARGETS telastl DESTINATION lib)
INSTALL(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/std DESTINATION lib/tela/modules FILES_MATCHING PATTERN "*.tela")
